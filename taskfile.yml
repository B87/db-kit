version: "3"

dotenv: [".env"]

env:
  TMPDIR: ./tmp
  TASK_TEMP_DIR: "{{.TMPDIR}}/.task"

tasks:
  setup:
    cmds:
      - mkdir -p $(pwd){{.TMPDIR}}
      - go install github.com/lukaszraczylo/semver-generator@latest
      - pre-commit install -c ./config/.pre-commit-config.yaml

  test:
    cmds:
      - go test -v -coverprofile={{.TMPDIR}}/cover.out ./...

  push-coverage:
    cmds:
      - bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r {{.TMPDIR}}/cover.out

  semver:
    cmds:
      - semver-generator -c ./config/semver.yaml generate -l | awk '{print $2}'

  build:
    cmds:
      - go build -o {{.TMPDIR}}/db-kit main.go

  release:
    deps: [build]
    cmds:
      - git tag v$(semver-generator -c ./config/semver.yaml generate -l | awk '{print $2}')
      - git push origin main --tags

  migrate-up:
    cmds:
      - go run main.go --user {{.POSTGRES_USER}} --password {{.POSTGRES_PASSWORD}} --db {{.POSTGRES_DB}} migrate up

  migrate-reset:
    cmds:
      - go run main.go --user {{.POSTGRES_USER}} --password {{.POSTGRES_PASSWORD}} --db {{.POSTGRES_DB}} migrate reset

  migrate-down:
    cmds:
      - go run main.go --user {{.POSTGRES_USER}} --password {{.POSTGRES_PASSWORD}} --db {{.POSTGRES_DB}} migrate down

  migrate-create:
    cmds:
      - go run main.go --user {{.POSTGRES_USER}} --password {{.POSTGRES_PASSWORD}} --db {{.POSTGRES_DB}} migrate create test
